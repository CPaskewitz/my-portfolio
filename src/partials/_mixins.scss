@use "./variables" as *;

@mixin tablet {
    @media (min-width: $tablet) {
        @content;
    }
}

@mixin desktop {
    @media (min-width: $desktop) {
        @content;
    }
}

@mixin glossy-effect($speed: 'medium') {
    position: relative;
    overflow: hidden;

    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 1;
        mix-blend-mode: overlay;
        background: transparent;
    }

    &::after {
        content: "";
        position: absolute;
        top: -100%;
        left: -100%;
        width: 300%;
        height: 300%;
        z-index: 1;
        pointer-events: none;
        background: linear-gradient(to right,
                rgba(255, 255, 255, 0) 0%,
                rgba(255, 255, 255, 0.15) 50%,
                rgba(255, 255, 255, 0) 100%);
        transform: rotate(30deg);

        @if $speed =='slow' {
            animation: section-shine 12s infinite linear;
        }

        @else if $speed =='medium' {
            animation: section-shine 8s infinite linear;
        }

        @else if $speed =='fast' {
            animation: section-shine 5s infinite linear;
        }
    }
}

@keyframes section-shine {
    0% {
        transform: translateX(-100%) rotate(30deg);
    }

    100% {
        transform: translateX(100%) rotate(30deg);
    }
}

@mixin swirling-shadow-effect($shadow-color: rgba(0, 0, 0, 0.1),
    $swirl-intensity: 0.15,
    $animation-duration: 10s) {
    position: relative;
    overflow: hidden;

    &::before,
    &::after {
        content: "";
        position: absolute;
        // Increase coverage area to prevent edges from showing
        top: -100%;
        left: -100%;
        width: 300%;
        height: 300%;
        z-index: 1;
        pointer-events: none;
        mix-blend-mode: multiply;
        // Add transform-origin to keep animations centered
        transform-origin: center center;
    }

    &::before {
        background: radial-gradient(circle at center,
                rgba(red($shadow-color), green($shadow-color), blue($shadow-color), 0) 0%,
                rgba(red($shadow-color), green($shadow-color), blue($shadow-color), $swirl-intensity * 0.5) 50%,
                rgba(red($shadow-color), green($shadow-color), blue($shadow-color), 0) 100%);
        animation: swirl-shadow-base #{$animation-duration} infinite alternate ease-in-out;
    }

    &::after {
        background: linear-gradient(135deg,
                rgba(red($shadow-color), green($shadow-color), blue($shadow-color), 0) 0%,
                rgba(red($shadow-color), green($shadow-color), blue($shadow-color), $swirl-intensity) 25%,
                rgba(red($shadow-color), green($shadow-color), blue($shadow-color), 0) 50%,
                rgba(red($shadow-color), green($shadow-color), blue($shadow-color), $swirl-intensity) 75%,
                rgba(red($shadow-color), green($shadow-color), blue($shadow-color), 0) 100%);
        animation: swirl-shadow-overlay #{$animation-duration} infinite alternate-reverse cubic-bezier(0.4, 0, 0.2, 1);
    }

    >* {
        position: relative;
        z-index: 2;
    }
}

// Modify animations to keep movement more contained
@keyframes swirl-shadow-base {
    0% {
        transform: rotate(-8deg) scale(1);
        opacity: 0.3;
    }

    50% {
        transform: rotate(8deg) scale(1.05);
        opacity: 0.6;
    }

    100% {
        transform: rotate(-8deg) scale(1);
        opacity: 0.3;
    }
}

@keyframes swirl-shadow-overlay {
    0% {
        transform: rotate(12deg) translateX(-5%) scale(0.95);
        opacity: 0.2;
    }

    50% {
        transform: rotate(-12deg) translateX(5%) scale(1.05);
        opacity: 0.5;
    }

    100% {
        transform: rotate(12deg) translateX(-5%) scale(0.95);
        opacity: 0.2;
    }
}